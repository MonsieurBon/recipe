name: Build and analyze recipe

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: "${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}"
          restore-keys: ${{ runner.os }}-m2
      - name: Cache NPM packages
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm
          restore-keys: ${{ runner.os }}-npm

      - run: npm ci
      - name: lint frontend
        run: npm run lint
      - name: test frontend
        run: npm run test:headless
      - name: build frontend
        run: npm run build

      - name: lint backend
        run: mvn -B spotless:check
      - name: build backend
        run: mvn -B jacoco:prepare-agent install jacoco:report -Pcoverage
      - name: run sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: >
          mvn -B sonar:sonar -Pcoverage
          -Dsonar.projectKey=MonsieurBon_recipe_401ab212-9245-498c-bb02-ba0cc209e95f
          -Dsonar.projectName='recipe'
          -Dsonar.sources=pom.xml,src/main/java,src/main/angular
          -Dsonar.exclusions=src/main/angular/**/*.spec.ts
          -Dsonar.tests=src/test/java
          -Dsonar.test.inclusions=src/main/angular/**/*.spec.ts
          -Dsonar.javascript.lcov.reportPaths=./target/coverage/lcov.info

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
